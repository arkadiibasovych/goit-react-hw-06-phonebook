{"version":3,"sources":["redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","Components/PhonebookForm/PhonebookForm.jsx","Components/ContactList/ContactListItem.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","App.jsx","redux/contacts/contact-reducer.js","redux/store.js","index.js"],"names":["getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","contact","name","toLowerCase","includes","toLocaleLowerCase","addContact","createAction","data","payload","id","shortid","generate","number","deleteContact","changeFilter","useStyles","createUseStyles","form","display","flexDirection","marginLeft","marginRight","padding","width","border","borderRadius","boxShadow","label","marginBottom","justifyContent","color","button","backgroundColor","outline","cursor","PhonebookForm","useState","setNumber","setName","dispatch","useDispatch","useSelector","validateForm","filterContact","find","alert","handleUniq","s","className","onSubmit","e","preventDefault","input","type","value","onChange","target","listItem","alignItems","fontWeight","ContactItem","onClick","list","margin","ContactList","map","ContactListItem","marginTop","Filter","App","createReducer","_","combineReducers","rootReducer","contactsReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbb6623a.chunk.js","sourcesContent":["export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n\r\n  const filter = getFilter(state);\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLocaleLowerCase()),\r\n  );\r\n};\r\n","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contacts/add', data => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name: data.name,\r\n    number: data.number,\r\n  },\r\n}));\r\nexport const deleteContact = createAction('contacts/delete');\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import { useState } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport { addContact } from '../../redux/contacts/contacts-actions';\r\n\r\nconst useStyles = createUseStyles({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    padding: 25,\r\n    width: '250px',\r\n    border: '1px solid black ',\r\n    borderRadius: 4,\r\n    boxShadow: '1px 1px 0px 0px black',\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    marginBottom: 10,\r\n    justifyContent: 'space-between',\r\n    '&:hover': {\r\n      color: 'orange',\r\n    },\r\n  },\r\n  button: {\r\n    backgroundColor: '#fff',\r\n    border: '1px solid black ',\r\n    boxShadow: '2px 2px 0px 0px black',\r\n    borderRadius: 3,\r\n    outline: 'none',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      border: '1px solid orange ',\r\n      boxShadow: '2px 2px 0px 0px orange',\r\n      color: 'orange',\r\n    },\r\n  },\r\n});\r\n\r\nconst PhonebookForm = () => {\r\n  const [number, setNumber] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const handleNameChange = e => {\r\n    setName(e.target.value);\r\n  };\r\n  const handleNumberChange = e => {\r\n    setNumber(e.target.value);\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const isValidated = validateForm();\r\n    if (!isValidated) return;\r\n    dispatch(addContact({ name, number }));\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const handleUniq = ({ name }) => {\r\n    const filterContact = !!contacts.find(contact => contact.name === name);\r\n    filterContact && alert(`Contact is already in the Phonebook`);\r\n    return !filterContact;\r\n  };\r\n  const validateForm = () => {\r\n    if (!name || !number) {\r\n      alert('Please Ðµnter data!');\r\n      setName('');\r\n      setNumber('');\r\n      return false;\r\n    }\r\n\r\n    return handleUniq(name);\r\n  };\r\n\r\n  const s = useStyles();\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={number}\r\n          onChange={handleNumberChange}\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PhonebookForm;\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\r\n\r\nconst useStyles = createUseStyles({\r\n  listItem: {\r\n    width: 300,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n  },\r\n  name: {\r\n    marginRight: 'auto',\r\n  },\r\n  number: {\r\n    fontWeight: '500',\r\n    marginRight: 'auto',\r\n  },\r\n  button: {\r\n    backgroundColor: '#fff',\r\n    boxShadow: '1px 1px 0px 0px black',\r\n    border: 'none',\r\n    borderRadius: 3,\r\n    outline: 'none',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      boxShadow: '1px 1px 0px 0px orange',\r\n      color: 'orange',\r\n    },\r\n  },\r\n});\r\nconst ContactItem = ({ contact }) => {\r\n  const s = useStyles();\r\n  const dispatch = useDispatch();\r\n  const handleDelete = () => dispatch(deleteContact(contact.id));\r\n  return (\r\n    <li className={s.listItem}>\r\n      <p className={s.name}>{contact.name}</p>\r\n      <p className={s.number}>{contact.number}</p>\r\n      <button className={s.button} onClick={handleDelete}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nimport ContactListItem from './ContactListItem';\r\nimport { useSelector } from 'react-redux';\r\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\r\n\r\nconst useStyles = createUseStyles({\r\n  list: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n});\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const s = useStyles();\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(contact => (\r\n        <ContactListItem key={contact.id} contact={contact} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","// import PropTypes from 'prop-types';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\n\r\nconst useStyles = createUseStyles({\r\n  label: {\r\n    width: 300,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '&:hover': {\r\n      color: 'orange',\r\n    },\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    marginTop: 10,\r\n  },\r\n});\r\nconst Filter = () => {\r\n  const s = useStyles();\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n  const handleFilterChange = e => {\r\n    dispatch(changeFilter(e.target.value));\r\n  };\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={handleFilterChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n// Filter.propTypes = {\r\n//   onChange: PropTypes.func.isRequired,\r\n//   value: PropTypes.string,\r\n// };\r\n\r\nexport default Filter;\r\n","import PhonebookForm from './Components/PhonebookForm';\nimport ContactList from './Components/ContactList';\nimport Filter from './Components/Filter';\n\nconst App = () => {\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <PhonebookForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default App;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, changeFilter } from './contacts-actions';\r\n\r\nconst initialState = {\r\n  items: [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n};\r\n\r\nconst items = createReducer(initialState.items, {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import contactsReducer from './contacts/contact-reducer';\r\n\r\nimport { configureStore, combineReducers } from '@reduxjs/toolkit';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = configureStore({ reducer: rootReducer });\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}